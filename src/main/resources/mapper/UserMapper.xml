<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.student.mapper.UserMapper">

    <!-- 结果映射 -->
    <resultMap id="UserResultMap" type="com.student.entity.User">
        <id column="id" property="id"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="role" property="role"/>
        <result column="email" property="email"/>
        <result column="phone" property="phone"/>
        <result column="created_time" property="createdTime"/>
        <result column="updated_time" property="updatedTime"/>
        <result column="status" property="status"/>
    </resultMap>

    <!-- 根据用户名查询用户 -->
    <select id="findByUsername" resultMap="UserResultMap">
        SELECT * FROM users WHERE username = #{username} AND status = 1
    </select>

    <!-- 根据ID查询用户 -->
    <select id="findById" resultMap="UserResultMap">
        SELECT * FROM users WHERE id = #{id}
    </select>

    <!-- 查询所有用户 -->
    <select id="findAll" resultMap="UserResultMap">
        SELECT * FROM users ORDER BY created_time DESC
    </select>

    <!-- 分页查询用户 -->
    <select id="findByPage" resultMap="UserResultMap">
        SELECT * FROM users ORDER BY created_time DESC LIMIT #{offset}, #{limit}
    </select>

    <!-- 根据角色查询用户 -->
    <select id="findByRole" resultMap="UserResultMap">
        SELECT * FROM users WHERE role = #{role} ORDER BY created_time DESC
    </select>

    <!-- 统计用户总数 -->
    <select id="countAll" resultType="int">
        SELECT COUNT(*) FROM users
    </select>

    <!-- 插入用户 -->
    <insert id="insert" parameterType="com.student.entity.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (username, password, role, email, phone, status)
        VALUES (#{username}, #{password}, #{role}, #{email}, #{phone}, #{status})
    </insert>

    <!-- 更新用户 -->
    <update id="update" parameterType="com.student.entity.User">
        UPDATE users SET
            username = #{username},
            role = #{role},
            email = #{email},
            phone = #{phone},
            updated_time = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除用户 -->
    <delete id="deleteById">
        DELETE FROM users WHERE id = #{id}
    </delete>

    <!-- 更新用户状态 -->
    <update id="updateStatus">
        UPDATE users SET status = #{status}, updated_time = CURRENT_TIMESTAMP WHERE id = #{id}
    </update>

    <!-- 更新用户密码 -->
    <update id="updatePassword">
        UPDATE users SET password = #{password}, updated_time = CURRENT_TIMESTAMP WHERE id = #{id}
    </update>

</mapper>
